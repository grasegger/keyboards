name: Lasagna
on:
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      matrix:
        keeb: [lasagna, weirdo]
    env:
      NODE_VERSION: 16
      DEBIAN_FRONTEND: noninteractive
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: User cache folder
        if: ${{ !env.ACT }}
        uses: actions/cache@v2
        with:
          path: /home/runner/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('.github/workflows/*') }}

      - name: Cache node modules
        uses: actions/cache@v2.1.7
        if: ${{ !env.ACT }}
        with:
          path: ergogen/node_modules
          key: ${{ runner.os }}-${{ hashFiles('ergogen/package-lock.json') }}
          restore-keys: ${{ runner.os }}

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'

      - name: Install packages we need
        if: ${{ !env.ACT }}
        run: |
          pip install xvfbwrapper
          sudo apt-get -qq update
          sudo apt-get -qq install -y kicad kicad-libraries zip inkscape make git libmagickwand-dev inkscape libgraphicsmagick1-dev libmagickcore-dev openscad recordmydesktop xvfb xdotool

      - name: Setup dhall
        uses: dhall-lang/setup-dhall@v4
        
      - name: Environment Preparation
        run: |
          mkdir -p output
          cd ergogen
          npm i

      - name: Create ergogen config
        run: bin/dhall-to-yaml --explain --file variants/${{ matrix.keeb}}.dhall --output output/${{ matrix.keeb}}.yaml

      - name: Archive (Ergogen Config)
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.keeb}}
          path: output/${{ matrix.keeb}}.yaml
      
      - name: Run ergogen
        run: |
          cd ergogen
          node src/cli.js -o ../output ../output/${{ matrix.keeb}}.yaml
          cd ..
          cp output/pcbs/${{ matrix.keeb}}.kicad_pcb ${{ matrix.keeb}}_ergogen.kicad_pcb

      - name: Archive (Ergogen PCB)
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.keeb}}
          path: ${{ matrix.keeb}}_ergogen.kicad_pcb

      - name: Export DSN file
        if: ${{ !env.ACT }}
        run: |
          chmod +x bin/export_dsn.py
          ./bin/export_dsn.py ${{ matrix.keeb}}

      - name: Archive (DSN file)
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.keeb}}
          path: output/pcbs/${{ matrix.keeb}}.dsn

      - name: Autorouting
        if: ${{ !env.ACT }}
        run: |
          wget -O freerouting.jar https://github.com/freerouting/freerouting/releases/download/v1.4.5/freerouting-1.4.5.jar
          cp freerouting.rules output/pcbs/${{ matrix.keeb}}.rules
          chmod +x bin/freerouting.py
          ./bin/freerouting.py ${{ matrix.keeb}}

      - name: Archive (SES file)
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.keeb}}
          path: output/pcbs/${{ matrix.keeb}}.ses

      - name: Prepare kicad gerber export
        if: ${{ !env.ACT }}
        run: |
          mkdir -p ~/.kicad/scripting/plugins
          cd ~/.kicad/scripting/plugins
          git clone https://github.com/asukiaaa/gerber_to_order.git

      - name: Gerber Export
        if: ${{ !env.ACT }}
        run: |
          chmod +x bin/import_dsn.py
          ./bin/import_dsn.py ${{ matrix.keeb}}

      - name: Archive (PCB)
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.keeb}}
          path: output/pcbs/gerber_to_order/*.zip

      - name: Archive (Gerber)
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.keeb}}
          path: output/pcbs/${{ matrix.keeb}}.kicad_pcb

      - name: Archive (Videos)
        if: ${{ env:GITHUB_REF_NAME != 'main' && !env.ACT }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.keeb}}_videos
          path: "*.ogv"